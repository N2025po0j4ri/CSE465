% "John Doe" is a person
person("John Doe").
% "Jane Doe" is a person
person("Jane Doe").

% "John Doe" has the uniqueID 1
assigned_uniqueID("John Doe", 1).

% The person with uniqueID 1 is a faculty
undergraduate_student(1).

% The person with uniqueID 1 is (also) a student
graduate_student(1).

% ------------------------------------

% Define a range for unique IDs from 1 to 1000.
uniqueID(1..1000).

% If there are two people X and Y who both have the same unique ID I, then X and Y must be different people.
assigned_uniqueID(X, I) :- assigned_uniqueID(Y, I),
                            person(X),
                            person(Y),
                            X != Y.

% A person X has a unique ID I if there is an assignment of a unique ID I to X.
has_uniqueID(X) :- assigned_uniqueID(X, I).

% A person X is missing a unique ID if X is a person but does not have a unique ID.
missing_uniqueID(X) :- person(X), not has_uniqueID(X).

% A person X with unique ID I can be an undergraduate student, graduate student, faculty, or staff.
undergraduate_student(I) | graduate_student(I) | faculty(I) | staff(I) :- 
	person(X), assigned_uniqueID(X, I).

#show missing_uniqueID/1.

